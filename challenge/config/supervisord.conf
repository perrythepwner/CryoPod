[supervisord]
nodaemon = false
pidfile = /run/supervisord.pid
logfile = /var/log/ctf/supervisord.log
user = root
group = root

[program:redis]
command=redis-server /etc/redis.conf --daemonize no
user=redis
autostart=true
autorestart=true
stderr_logfile=/var/log/ctf/redis.err.log
stdout_logfile=/var/log/ctf/redis.out.log

[program:postgres]
command=postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000' -D /var/lib/postgresql/data/
user=postgres
autostart=true
autorestart=false
stderr_logfile=/var/log/ctf/postgres.err.log
stdout_logfile=/var/log/ctf/postgres.out.log

[program:blockscout_backend]
command=sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
directory=/home/ctf/blockscout_backend/
user=blockscout
autostart=true
autorestart=true
stderr_logfile=/var/log/ctf/blockscout_backend.err.log
stdout_logfile=/var/log/ctf/blockscout_backend.out.log

[program:blockscout_frontend]
command=sh -c "/home/ctf/blockscout_frontend/entrypoint.sh && chown -R 777 ./public && node server.js"
directory=/home/ctf/blockscout_frontend/
user=root
autostart=true
autorestart=true
stderr_logfile=/var/log/ctf/blockscout_frontend.err.log
stdout_logfile=/var/log/ctf/blockscout_frontend.out.log

[program:nginx]
command=/usr/sbin/nginx -g 'daemon off;' -c /etc/nginx/nginx.conf
user=nginx
autostart=true
autorestart=true
stderr_logfile=/var/log/ctf/nginx.err.log
stdout_logfile=/var/log/ctf/nginx.out.log

[program:eth_sandbox_server]
command = gunicorn
    --user ctf
    --group ctf
    --bind 0.0.0.0:%(ENV_LOCAL_RPC_PORT)s
    --workers 1
    --threads 1
    --access-logfile /var/log/ctf/gunicorn.access.log
    --error-logfile /var/log/ctf/gunicorn.error.log
    --capture-output
    --log-level info
    eth_sandbox.server:app
stdout_logfile = /var/log/ctf/gunicorn_supervisor.out.log
stderr_logfile = /var/log/ctf/gunicorn_supervisor.err.log
priority = 1

[program:chall_handler]
command = socat -T 30 TCP-LISTEN:%(ENV_HANDLER_PORT)s,reuseaddr,fork EXEC:'python3 -u /home/ctf/backend/scripts/deploy/deploy_handler.py'
user = ctf
stdout_logfile = /var/log/ctf/chall_handler.out.log
stderr_logfile = /var/log/ctf/chall_handler.err.log
priority = 2

[program:bot_script]
command = python3 -m evm_bots.simulation
directory = /home/ctf/backend/scripts/
user = ctf
stdout_logfile = /var/log/ctf/bot.out.log
stderr_logfile = /var/log/ctf/bot.err.log
priority = 4